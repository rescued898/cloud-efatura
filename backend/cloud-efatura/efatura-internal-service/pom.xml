<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">


    <modelVersion>4.0.0</modelVersion>

    <parent>
        <artifactId>cloud-efatura</artifactId>
        <groupId>org.experteam.efatura</groupId>
        <version>1.0</version>
    </parent>

    <artifactId>efatura-internal-service</artifactId>
    <packaging>war</packaging>

    <properties>
        <java.version>1.8</java.version>

        <graphiql-spring-boot-starter.version>5.10.0</graphiql-spring-boot-starter.version>
        <graphql-spring-boot-starter.version>5.10.0</graphql-spring-boot-starter.version>
        <!--<graphql-java-tools.version>5.6.1</graphql-java-tools.version>-->
        <kotlin.version>1.3.10</kotlin.version>
    </properties>

    <dependencies>

        <dependency>
            <groupId>org.experteam.efatura</groupId>
            <artifactId>efatura-commons</artifactId>
            <version>1.0</version>
        </dependency>

        <dependency>
            <groupId>org.experteam.efatura</groupId>
            <artifactId>efatura-scheduler-commons</artifactId>
            <version>1.0</version>
        </dependency>

        <dependency>
            <groupId>org.experteam.efatura</groupId>
            <artifactId>efatura-oracle-cloud-integration</artifactId>
            <version>1.0</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <dependency>
            <groupId>com.graphql-java-kickstart</groupId>
            <artifactId>graphiql-spring-boot-starter</artifactId>
            <version>${graphiql-spring-boot-starter.version}</version>
        </dependency>

        <dependency>
            <groupId>com.graphql-java-kickstart</groupId>
            <artifactId>graphql-spring-boot-starter</artifactId>
            <version>${graphql-spring-boot-starter.version}</version>
        </dependency>

        <!--<dependency>
            <groupId>com.graphql-java-kickstart</groupId>
            <artifactId>graphql-java-tools</artifactId>
            <version>${graphql-java-tools.version}</version>
        </dependency>-->

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-tomcat</artifactId>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <optional>true</optional>
        </dependency>

    </dependencies>

    <!--<repositories>
        <repository>
            <id>jcenter</id>
            <url>https://jcenter.bintray.com/</url>
        </repository>
    </repositories>-->


    <build>
        <finalName>efatura-internal-service</finalName>

        <extensions>
            <extension>
                <groupId>org.apache.maven.wagon</groupId>
                <artifactId>wagon-ssh</artifactId>
            </extension>
        </extensions>

        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>

            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.7.0</version>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>wagon-maven-plugin</artifactId>
                <version>1.0</version>
                <executions>
                    <execution>
                        <id>upload-deploy</id>
                        <!-- Run upload-single and sshexec while packing -->
                        <phase>package</phase>
                        <goals>
                            <goal>upload-single</goal>
                            <goal>sshexec</goal>
                        </goals>

                        <configuration>
                            <serverId>xt-efatura-dev</serverId>
                            <fromFile>target/efatura-internal-service.war</fromFile>
                            <!-- Upload to Tomcat's webapps Directory -->
                            <url>scp://10.16.246.209/home/cloud-efatura/</url>
                            <commands>
                                <!-- Upload to Tomcat's webapps Directory -->
                                <command>docker cp /home/cloud-efatura/efatura-internal-service.war efatura-tomcat-dev-2:/usr/local/tomcat/webapps/</command>

                                <!-- Restart Tomcat Docker -->
                                <command>docker restart efatura-tomcat-dev-2</command>
                            </commands>
                            <displayCommandOutputs>true</displayCommandOutputs>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>

    </build>


</project>